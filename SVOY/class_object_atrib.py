""" определим класс, который будет хранить координаты точек на плоскости"""


class Point:
    # содержимое класса (пространство имен)
    # пропишем атрибуты (свойства) класса,- цвет и размер (радиус) точек.
    color = 'red'
    circle = 5


# вывести содержимое класса:
print(Point.color)
Point.circle = 11  # изменим значение circle
print(Point.circle)
print(Point.__dict__)

# создадим экземпляры (объекты) класса. Объекты разные и независимы.
a = Point()
b = Point()
# атрибуты класса (тут color и circle) принадлежат именно классу, а не экземплярам класса, но
# через экземпляры класса, можно обращаться к его атрибутам. Однако, можно изменять значение атрибута
# (тут color и circle) класса, в любом его экземпляре (тут a и b),
# и тогда значение атрибута, для каждого экземпляра, будет свое, например:
a.circle = 22
a.color = 'black'
# теперь получается, что в экземпляре класса 'b', значения атрибутов, остались текущие для класса, а
# в экземпляре 'a', circle = 22, а color = 'black'
""" можно добавить динамически в класс какой-нить атрибут"""
# или так:
Point.new_atr = '6'
# или так (в скобках 1 -класс, 2 -имя атрибута, 3 значение атрибута)
setattr(Point, 'new_atr2', 5)
print(Point.__dict__)
"""удаление атрибутов из класса"""
# удалим атрибут new_atr2
del Point.new_atr2
delattr(Point, 'new_atr')
print(Point.__dict__)
# проверка наличия (отсутствия)  атрибута в классе
hasattr(Point, 'new_atr2') # будет значение False, т.к. мы его удалили
hasattr(Point, 'new_atr') # будет значение False
