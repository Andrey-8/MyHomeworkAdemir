'''match/case - (с кортежами и списками)
позволяют проверять переменные, на соответствие шаблону и
при найденном совпадении, выполнять заданные операции.'''

"""шаблоны приведенный ниже (с кортежем), так же работает и со списками"""

cmd = ('Балакирев', 'Python', 2000.78) # имеем кортеж
# проверим, если это действительно кортеж, то присвоим его содержание
# переменной book
match cmd:
    case tuple() as book:
        print(f'это крортеж: {book}') # это крортеж: ('Балакирев', 'Python', 2000.78)
    case _:
        print('непонятный формат')

# но т.к. кортеж, это упорядоченный тип данных (list, tuple, range),
# то мы можем распаковать его сразу в case:
cmd2 = ('Балакирев', 'Python', 2000.78) # имеем кортеж
# x - автор книги
# y - название книги
# z - цена книги
match cmd2:
    case x,y,z: # элементов распаковки, должно быть ровно столько,
        # сколько элементов в кортеже, если элементов больше нужного,
        # можно использовать звездочку с подчеркиванием * = case x,y,z,*_:
        # кстати распаковку, можно заключить в скобки case (x,y,z):
        print(f'книга {x}, {y}, {z}') # книга Балакирев, Python, 2000.78
    case _:
        print('непонятный формат')


cmd2 = ('Балакирев', 'Python', 2000.78) # имеем кортеж
match cmd2:# можно сделать распаковку, предварительно проверив типы данных:
    case str() as x, str() as y,float() | int() as z: #проверка пройдена, присваивается значение
        print(f'книга {x}, {y}, {z}')
    case _:
        print('непонятный формат')

'''можно совместить шаблоны распаковки, что бы избежать повторов кода:'''
#например, мы точно не знаем, каков формат кортежа, может в начале идет автор,
# а может сначала в кортеже, ненужный нам порядковый номер книги, а в конце год издания,
# тогда пишем так:
cmd3 = (3, 'Балакирев', 'Python', 2000.78, 2025) # имеем кортеж
match cmd3:
    case list(): # проверка типа данных (для примера)
        print('хочу кортеж, а не лист')
    case (x, y, z) | (_, x, y, z, _):
        print(f'книга {x}, {y}, {z}')
    case _:
        print('непонятный формат')



