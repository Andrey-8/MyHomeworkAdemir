'''match/case - позволяют проверять переменные, на соответствие шаблону и
при найденном совпадении, выполнять заданные операции.'''

# берем переменную cmd
cmd = 'top'

# затем пишем оператор match и после него указываем эту переменную
match cmd:
    # внутри этого оператора, с указанной переменной, прописываем блоки case,
    # в которых прописываем определенное условие, как только условие совпадает,
    # с переменной, выполняется действие после этого case. Следующие блоки case,
    # пропускаются и не отрабатываются, программа сразу переходит на следующую
    # функцию.
    case 'pop':
        print('первая проверка')
    case 'popa':
        print('вторая проверка')
    case 'top':
        print('третья проверка')
    case 'pop':
        print('четвертая проверка')
    case _: # блок дефолт, отрабатывает всегда, если остальные не отработали
        print('что-то не то')
print('проверки завершены')

#==============================================
"""более сложный вариант"""

cmd2 = 'popa'

match cmd2: # шаблон ниже, не будет делать проверки, а просто присвоит значение
    # переменной cmd2, переменной, указанной в case
    case command: # как только прописали тут какую-то переменную, если такой
        # ранее не было, то в программе создается переменная с этим именем и
        # она принимает значение из переменной, указанной в match (тут cmd2 = 'popa')
        print(f'команда {command}')
# проверим, является ли значение переменной cmd2, строковым типом
cmd2 = 'popas'
match cmd2:
    case str(): # в качестве шаблона для проверки, указываем функцию str()
        print(f'тип значения переменной {type(cmd2)}')
    case _: # блок дефолт, отрабатывает всегда, если остальные не отработали
        print('опять что-то не то')

"""тперь если проверка прошла успешно (переменная является строкой), то
присвоим ее значение другой переменной"""
cmd3 = 'popez' # меняем тут значения, для проверки
match cmd3:
    case str() as new_cmd3: # можно было написать case str(new_cmd3)
        print(f'значение строковое {new_cmd3}')
    case int() as new_cmd3 if 0 <= new_cmd3 <= 10:
        print(f'значение целочисленное, в районе 10: {new_cmd3}')
    case str() | list() as new_cmd3: # можно проверить несколько условий, через- |
        print(f'значение строковое или список{new_cmd3}')
    case _: # блок дефолт, отрабатывает всегда, если остальные не отработали
        print('опять что-то не то')