"""KEY сортировка - сортировка по ключам, в методе sort и функции sorted.
Аргумент key, есть и в sorted и в sort"""

# обычная сортировка:
a = [-11, 2, 13, 40, -5, 8]
z = sorted(a)
print(a)
print(z) # обычная сортировка по значениям (по возрастанию)

"""сортировка по показателю четности значений"""
# например используем ключ, в котором четные значения, будут иметь
# значение 0 (ноль), а нечетные значение 1 (один)
# сначала создадим функцию, которая будет определять, четное значение или нет
def chet_nechet(x):
    return x % 2 # на выходе будет возвращаться результат остатка от деления.
    # для четных 0, для нечетных 1
# затем просто в функцию sorted, прописываем дополнительный аргумент (key),
# в котором пропишем созданную функцию, для разделения четных и нечетных значений

s = [-11, 2, 13, 40, -5, 8]
d = sorted(a, key=chet_nechet) # в виде ключа, указываем функцию, без скобок
print(d)

# можно было конечно сделать проще - прописать lambda функцию:
# d = sorted(a, key=lambda x: x % 2), но это если функция простая.

"""теперь будем сортировать не только на четные-нечетные, но и по возрастанию"""
# для этого, сначала назначим возврат четным 0 (ноль) + четное значение и
# нечетным значениям, назначим возврат 100 + нечетное значение:
def sort_key(y):
    # возвращаем y, если значение четное и y+100, если нечетное значение
    return y if y % 2 == 0 else 100 + y
ss = [-11, 2, 13, 40, -5, 8]
dd = sorted(a, key=sort_key) # в виде ключа, указываем функцию, без скобок
print(dd)

'''более жизненные примеры сортировки:
отсортируем список из строк, по длине строк'''

lst = ["Москва", "Тверь", "Пермь", "Березники", "Воронеж"]
# в качестве ключа, просто передадим стандартную функцию len
f = sorted(lst, key=len)
print(f)

'''или отсортировать по цене книг'''
# есть кортеж с информацией по книгам (название и цена:
books = ((" МУ-МУ", 199), ("Солнушко", 120), ("Крик", 99), ("Лунка", 55))
# отсортируем их по последнему элементу каждого кортежа:
bbb = sorted(books, key=lambda x: x[-1])
print(bbb)



