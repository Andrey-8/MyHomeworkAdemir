"""Функция map. Примеры ее использования
Функция map() создаёт итератор, который можно использовать только один раз
для перебора элементов. После первого прохода по всем элементам итератор
становится пустым и повторное обращение к нему не даст результатов."""

# у функции "map", есть три аргумента: map(1 аргумент, 2 аргумент, 3 аргумент)
# 1 аргумент - функция, которая ПОСЛЕДОВАТЕЛЬНО будет применяться, к каждому
# значению итерируемого объекта
# 2 аргумент - сам иттерируемый объект
# 3 аргумент — необязательный параметр, который позволяет передать
# дополнительные последовательности данных.

# с помощью функции "map", преобразуем строки в обычные числа
b = map(int, ['1','2','3','4','5'])
# функция "map", возвращает иттератор (в примере это b), который мы можем
# перебирать, с помощью других функций
for i in b:
    # что бы вывести результат перебора в одну строку (а не столбиком),
    # пишем end=' '
    # на выходе, функция 'map', к каждому элементу итерируемого объекта,
    # последовательно применяла функцию "int" и выдавала числа, вместо
    # списка из строк
    print(i, end=' ')
# или можно преобразовать в обычный список:
a = list(b)
print(a) # тут на выходе будет пустой список, т.к. цикл for, выше, уже
# использовал функцию "map", а она используется только один раз.

# можно было и сделать что-нибудь еще, например сложить все элементы
# иттерируемого объекта:
ass = sum(b)
print(ass) # так же на выходе будет ноль, т.к. цикл for, выше, уже
# использовал функцию "map", а она используется только один раз.

'''следующий пример'''
# возьмем список городов и с помощью функции "мар", сформируем последовательность,
# которая вернет длины этих городов
citi = ['Москва', 'Питербург', 'Челябинск', 'Свердловск', 'Березники']
ci = map(len, citi)
ti = list(ci)
print(ti)

