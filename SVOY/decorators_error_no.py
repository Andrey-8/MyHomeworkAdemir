"""ДЕКОРАТОР - ОБРАБОТЧИК ОШИБОК"""

"""помимо того, что декоратор тут позволит изменить работу функции, не вмешиваясь в код функций,
так еще и позволил избежать дублирования кода (в данном случае, кода обхода ошибок)"""


def decor(f):
    def wrapper():  # стандартное название для такой функции - обертки
        # помещаем декорируемую функцию, в обработчик ошибок, например вместо чисел, ввели буквы
        try:
            # тут уже через параметр f, будет вызываться функция make, но поместим ее в переменную h
            h = f()
        except Exception:
            print("нужны только цифры..")
            # и опять запустим выполнение нужной функции
            h = f()
        return h

    return wrapper


@decor
def make():
    enter = float(input("введите число: "))
    return enter


@decor
def make2():
    enter = float(input("введите число, снова: "))
    return enter


make()
make2()
