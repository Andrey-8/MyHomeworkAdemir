"""аннотации типов коллекций, -  списков (list), кортежей (tuple), словарей (dict)
и множеств (set)"""

# аннотации - чисто информируют, нарушении требований аннотации, не желательно, но
# не вызывает ошибку (хотя зависит от кода, может потому и была сделана аннотация,
# что при внесении данных не того типа, будет ошибка

"""аннотировать список"""
spisok: list[int] = [1,2,3] # указали, что в списке должны быть только цифры

"""аннотировать кортеж"""
# прописывается тип, для каждого элемента кортежа
cortej: tuple[int, str,float]
cortej = (8,'строк', 9.0)
# или если нужно, что бы все элементы кортежа, имели один тип данных:
cortej2: tuple[float, ...]
cortej2 = (8.8, 3.4, 5.2, 8.9)

'словари - прописываются только типы для ключа и для значения'
slovar: dict[str, int]
slovar = {'op':1, 'io':2,'ui':3}

'множества'
mnojes: set[str]
mnojes = {'one', 'two', 'free'}

"""аннотация в функциях"""
# например есть функция, в которую подаем коллекцию, в виде списка с целыми значениями (list[int]),
# и возвращать она должна список из целых значений (->list[int])
# на возврат просто будет список, через фильтр, где лямбда функция, будет возвращать только
# положительные значения из списка sifer
def body_pozitiv(sifer:list[int]) -> list[int]:
    return list(filter(lambda x: x > 0, sifer))
body = body_pozitiv([1, -2, 3, -4, 5, -6])
print(body)