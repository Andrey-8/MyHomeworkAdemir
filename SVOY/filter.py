'''Функция filter для отбора значений итерируемых объектов'''
'''фильтрация итерируемых объектов:
filter(функция, итерируемый объект)
пример:'''

# имеем список, надо вывести из него только четные значения
def iterirum():
    d = [1,2,3,4,5,6,7,8,9,10]
    # в качестве функции, используем лямбда функцию
    r = filter(lambda x: x % 2 == 0, d)
    return r
y = iterirum()

# по сути, мы получили генератор итератора, что бы вывести сразу
# весь список нужных цифр из списка, используем цикл for
for i in y:
    print(i, end=' ') # прописал "end=' '", что бы вывод был не в столбик
print() # этот принт, что бы вывод принтов был не в одну строку - для наглядности

# можно было конечно и проще поступить - просто без def функции:
dd = [1,2,3,4,5,6,7,8,9,10]
rr = filter(lambda x: x % 2 == 0, dd)
# а тут просто создаем новую переменную, в которую передаем rr, как список
das = list(rr)
print(das)

'''ВТОРОЙ ПРИМЕР:
нужно выбрать из списка, только простые числа, для этого сначала напишем
функцию, которая будет определять в списке простые числа, потом уже 
запишем эту функцию в фильтр'''
def prost_chisl(w):
    # сначала создадим переменную f, для временного перебора значений
    f = w - 1
    # сразу проверка, если f меньше нуля (значит w равен нулю), то возвращаем False
    if f < 0:
        return False
    # далее в цикле проверим все значения, на которые может делиться число w
    while f > 1: # цикл до тех пор, пока f > 1
        # если w на цело делится на любое из чисел f, без остатка,
        # то возвращаем False, ведь это значит, что w не простое число
        if w % f == 0:
            return False
        # после чего конечно уменьшаем последовательно искомое число на 1
        f -= 1
    # если все вышеперечисленные проверки не сработали, значит найдено простое
    # число и возвращаем значение True
    return True
# теперь у нас есть функция для определения простого числа, вставим ее в фильтр

chisl = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# важно - в фильтр вставляем именно ссылку на функцию (без скобок, со скобками,
# это вызов функции
rrr = filter(prost_chisl, chisl)
opa = tuple(rrr)
print(opa)
