"""ГЕНЕРАТОРЫ СПИСКОВ, СЛОВАРЕЙ И МНОЖЕСТВ"""

spisok = [4, 5, 8, 6, 3, 2, 1, 9, 4, 5, 2, 7]
# когда нужно создать новый список, на основе другого списка, обычно используем цикл for
# проходим по списку циклом, добавляя значения в новый список, ну предположим, каждое значение умножаем на 2
new_spisok = []
for i in spisok:
    new_spisok.append(i * 2)
# print(new_spisok)
# но есть способ лучше - синтаксис генератора списков
# прямо в пустом списке, записываем переменную для перебора и сам цикл for
new_spisok = [i * 2 for i in spisok]  # это и есть генератор
# print(new_spisok)
# таким же методом, можно создать новое множество:
mnojestvo = {i * 2 for i in spisok}  # это и есть генератор
# print(mnojestvo)
# и так же со словарем
slovaric = {i: i * 2 for i in spisok}  # это и есть генератор
# print(slovaric)
# так же, прямо в генераторе, можно указать определенное условие, например, внести в список, только четные числа
chetnie = [i * 2 for i in spisok if i % 2 == 0]
# print(chetnie)

"""генераторы могу так же содержать и вложенные циклы"""
import os

# функция walk из модуля os, выдает кортеж из 3-х элементовЮ которые мы распакуем в
# цикле for на 3 переменные. в функцию walk, передаем путь, по которому она будет
# работать x- путь к папке, y- список из папок которые есть в папке указанной по адресу,
# z-список из файлов, что есть по этому адресу
# потому, что бы получить полный путь к каждому файлу в папке по адресу, нужно распаковать
# переменную z и объединить это с адресом (переменная x), сделаем это, с помощью еще одного,
# вложенного, цикла for - переберем (распакуем) файлы, имеющиеся по адресу (x)
# - for i in z - перебор файлов
# вызовем функцию path (работа с путями), из модуля os, дополнительно вызовем
# функцию join(), которая объединит пути с особенностями операционной системы,
# в которой укажем изначальный путь и переменную, в которую будут перебираться файлы,
# что находятся по этому пути (join(x, i))

gen = [
    os.path.join(x, i) for x, y, z in os.walk("C:\\stopupdates10portable") for i in z
]
print(gen)
"""генератор словаря, на основании другого словаря"""

price = {"meat": 2, "bread": 1, "potato": 0.5, "water": 0.2}
new_price = {}
for i in price.keys():
    new_price[i] = round(price[i] * 0.85, 2)  # благодаря функции round,
    # округляли значение до 2-х знаков, после запятой
print(new_price)
# напишем выражение выше (про price), с помощью генератора словаря:
new_price2 = {i: round(price[i] * 0.85, 2) for i in price.keys()}
print(new_price2)
