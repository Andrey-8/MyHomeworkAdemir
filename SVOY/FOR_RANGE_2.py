"""FOR"""
d = [1,2,3,4,5] # list - список
for i in d: # обычный перебор значений
    #print(i) # на выходе 12345 в столбик
    break # тут break, что бы не было ошибки, при отключении принта

for j in 'stroka':
    #print(j) # на выходе stroka в столбик
    if j == 'o': # но если при береборе встретится буква 'o'
        break # то конец цикла ( на выходе stro в столбик)

"""вычислим произведение всех элементов списка d"""
d = [1,2,3,4,5]
p = 1 # введем новую переменную, в которую передадим произведение
for x in d: # запустим перебор значений
    p *= x # будем перемножать значения с каждым перебором
#print(p)

""" что бы изменить список, нужно обращаться к его элементам, 
по индексу"""
d = [1,2,3,4,5] # список, индексы которого передадим в цикл
for r in [0, 1, 2, 3, 4]: # в цикле указываем не список а его индексы
    d[r] = 0 # меняем каждое число, индекс которого попал в перебор, на 0 (присваваем ноль)
print(d) # на выходе новый список [0, 0, 0, 0, 0]
# но конечно описывание индексов, с помощью другого списка - херня, лучше использовать
# функцию range(старт, стоп, шаг):
d = [1,2,3,4,5] # список, индексы которого передадим в цикл
for r in range(len(d)): # в цикле будет перебор по индексам списка
    d[r] = 0 # меняем каждое число, индекс которого попал в перебор, на 0 (присваваем ноль)
print(d) # на выходе новый список [0, 0, 0, 0, 0]

"""с помощью for, вычислим факториал числа"""
n = int(input('введи положительное число, не более 10: '))
# сначала проверим, что n положительное и меньше 100
if n < 1 or n > 10: # если n меньше 1 или больше 100, то ввели неверно
    print('ввели неверное число')
else: # иначе начнем вычисление
    p = 1 # сначала создадим переменную p со значением 1
    for i in range(1, n+1): # перебор n от 1 до n включительно (потому +1)
        p *= i
    print(f'факториал от {n}, равен {p}')

'''следующий пример без пояснений'''
for i in range(6):
    print('+' * i) # получится лесенка из плюсов (основание из 5 плюсов)

"""есть список из отдельных слов, надо записать их через пробел
в одну строку"""
words = ['шел', 'я', 'лесом', 'видел', 'чудо', 'чудо', 'видело', 'меня']
# сначала нужна переменная, в которой получим результат
s = ''
# далее начнем перебор слов в списке
for c in words:
    # далее просто будем соединять (через пробел) слова из перебора
    s += ' ' + c
    # lstrip() - убирает пробелы слева
print(s.lstrip()) # на выходе: шел я лесом видел чудо чудо видело меня
# а можно было просто использовать метод join()
# print(" ".join(words)) - преобразует список в строку, перед методом указан разделитель

'''еще пример, заменим все двузначные числа в списке на нули'''
doggy = [2, 5, 65, 7, 88, 99, -6, 122, 54, 888]
for i in range(len(doggy)): # запустим перебор индексов
    # и если число в списке (по индексу i), меньше-равно 10 и больше-равно 100
    if 10 <= abs(doggy[i]) >= 100: # abs - что бы не обращать внимание на минус 6
        # то такое число приравниваем нулю
        doggy[i] = 0
print(doggy) # --> [2, 5, 65, 7, 88, 99, 6, 0, 54, 0]

"""преобразовать кирилицу в латиницу"""
# сначала сделаем список англ. букв, созвучных русским
a_ya = ['a', 'b', 'v', 'g', 'd', 'e', 'zh', 'z', 'i', 'y', 'k', 'l', 'm', 'n',
        'o', 'p', 'r', 's', 't', 'u' 'f', 'h', 'cz', 'sh', 'ch', 'sch', '', 'y',
        '', 'e', 'yu', 'ya']
# затем определим переменную, которая будет принимать значение кода, для первой буквы
# русского алфавита
# ord() в Python — встроенная функция для преобразования символа в его ASCII-код.
# Принимает на вход строку из одного символа и возвращает её порядковый
# номер в Unicode. 1
# Например, вызов ord('a') вернёт целое число 97
start_index = ord('а')
# далее сформируем две вспомогательные переменные
title = 'Заебало меню это программирование'
slug = '' # сюда будет записана транскрипция русского на английский
# преобразование русского в англ, сделаем в цикле:
for s in title.lower(): # пробежимся по буквам текста (все сделаем маленькими)
    if 'а' <= s <= 'я': # если текущий символ (при переборе), от а до я, то
        # в строку slug добавим это значение из списка, по индексу (см.ниже)
        # как указать нужный индекс:
        # берем индекс текущей буквы (s), но запишем его в ord и вычтем из него
        # индекс буквы "а"
        slug += a_ya[ord(s) - start_index]
        # буква "а" имеет индекс ноль, значит если
    # ord(s) окажется буквой "а", то индекс a_ya, окажется равен нулю, значит
    # получим англ. букву 'a'., если разница будет равна 1, то получится буква 'b'
    # и т.д.
    # всякие символы, заменим на тире:
    # если s окажется одной из символов, то меняем его на тире
    elif s in ' !&?.,:;"':
        slug += '-'
    # иначе (если все норм) присвоим в slug, стимвол, который есть
    else:
        slug += s
print(slug)





