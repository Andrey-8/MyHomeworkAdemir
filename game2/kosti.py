# импортируем все из модуля tkinter
from tkinter import *
# импортируем модули рандом (случайный выбор) и тайм (для работы со временем)
import random, time


# первая функция, для броска, в ней записываем рандомный выбор картинки из нашего списка картинок
def brosok():
    x = random.choice(['b.png', 'b2.png', 'b3.png', 'b4.png', 'b5.png', 'b6.png'])
    return x


# теперь функция, для отображения в картинках, нужных действий для двух кубиков (картинку берем из рандома
# функции def brosok()
def img():
    # что бы переменные были видны в окне игры, сделаем их глобальными
    global b1, b2
    # что бы отобразить псевдоперебор картинок, используем цикл for
    for i in range(8):
        b1 = PhotoImage(file=(brosok()))
        b2 = PhotoImage(file=(brosok()))
        # теперь меткам созданным ниже, присваиваем картинки из этой функции
        lab1['image'] = b1
        lab2['image'] = b2
        # что бы замедлить псевдоперебор картинок, используем метод sleep() из модуля time
        time.sleep(0.2)
        # для отображения кубиков, теперь надо обновить главное окно игры (root)
        root.update()


# определяем переменную (root) и в ней запускаем класс Tk(), что бы определить окно будущей проги
root = Tk()
# методом .geometry(), который есть в модуле Tk(), обращаемся к переменной poot, что бы определить размер окна
# пишется всегда в строке
root.geometry('400x200')
# так же название окна
root.title('кости')
# что бы нельзя было изменить размер окна (мышкой), укажем высоту и ширину, как False
root.resizable(height=False, width=False)
# в лев.верх. углу созданного окна, надо сменить иконку на свою:
# метод PhotoImage(), умеет открывать фото
root.iconphoto(True, PhotoImage(file=('iconka.png')))
# сразу сделаем кнопку, на которую будем нажимать, для запуска бросков кубиков
Button(root, text='бросок', command=img).pack()  # img - картинка указанная в функции img()

# сделаем фон для игры (стол, на котором будут кубики
# для этого создадим переменную fon, где с помощью того же метода PhotoImage(), открываем нужное фото для фона
fon = PhotoImage(file=('holst.png'))  # пока фона не будет, для этого нужно дальше..
# вызываем класс Label(), в нем первым аргументом, указываем, что размещать метку (место расположения, за которое
# отвечает класс Label()), т.е. первый аргумент пишем root, а вторым аргументом, указываем какую картинку использовать,
# для фона - т.е. просто пишем созданную переменную fon, но и этого мало, для размещения картинки, нужно использовать
# упаковщик, который распакует указанное нами фото .pack()
Label(root, image=fon).pack()
# теперь нужно создать еще 2 метки (Label), в которых будут отображаться 2 кубика, для этого каждый кубик пропишем
# в переменных. Вместо метода .pack(), теперь будем использовать метод .place(), т.к. он позволяет точно указать
# где именно будет находится метка, для расположения картинки, по сетке координат x и y (relx=.. rely=..)
# команда anchor - это якорь, - команда, для закрепления меток по коордиантам
lab1 = Label(root)  # создали переменную, указывающую на окно нашей программы
lab1.place(relx=0.3, rely=0.5, anchor=CENTER)  # указали метку для 1-го кубика
lab2 = Label(root)  # создали переменную, указывающую на окно нашей программы
lab2.place(relx=0.7, rely=0.5, anchor=CENTER)  # указали метку для 2-го кубика

img()  # сошлемся на функцию, что бы при первом запуске игры, поле не было изначально пустым

# замыкает цикл окна игры, что позволяет выводить ее на экран
root.mainloop()
